---
import { slug as slugger } from "github-slugger";
import { type CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import GetTagList from "@utils/GetTagList";
import PostList from "@components/PostList.astro";
import type {Page} from "astro";
import Paginator from "@components/Paginator.astro";
import { PAGE_SIZE } from "@utils/Constants";
import {GetPosts} from "@utils/GetPosts";

// @ts-expect-error
export async function getStaticPaths ({ paginate }) {
    const tagList = await GetTagList();
    const posts = await GetPosts(true);
    
    return tagList.flatMap((tag) => {
        const filteredPosts = posts.filter(post => post.data.tags ? post.data.tags.includes(tag) : false);

        return paginate(filteredPosts, {
            params: { tag: slugger(tag) },
            props: { tag },
            pageSize: PAGE_SIZE,
        })
    });
}

interface Props {
    page: Page<CollectionEntry<"posts">>
    tag: string
}

const { page, tag } = Astro.props;

const baseUrl = import.meta.env.SITE ?? Astro.url.origin;
---

<Layout
    title={"Tag - " + tag + " - " + page.currentPage.toString()}
    description="태그 목록 페이지입니다."
    url={baseUrl + Astro.url.pathname}
>
    <div class="content-container my-6 px-4 space-y-12">
        <p class="flex flex-col text-center mb-6 border-b-2 pb-4">
            <span>Tag</span>
            <span class="font-bold text-2xl text-sky-300">{tag}</span>
        </p>

        <PostList posts={page.data} />

        <div class="mt-6">
            <Paginator page={page} baseUrl={"/tags/" + slugger(tag)} />
        </div>
    </div>
</Layout>
