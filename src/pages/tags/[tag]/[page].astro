---
import { slug as slugger } from "github-slugger";
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import GetTagList from "@utils/GetTagList";
import PostList from "@components/PostList.astro";
import type {Page} from "astro";
import Paginator from "@src/components/Paginator.astro";

// @ts-expect-error
export async function getStaticPaths ({ paginate }) {
    const tagList = await GetTagList();
    const posts = await getCollection("posts");
    
    return tagList.flatMap((tag) => {
        const filteredPosts = posts.filter(post => post.data.tags ? post.data.tags.includes(tag) : false);

        return paginate(filteredPosts, {
            params: { tag: slugger(tag) },
            props: { tag },
            pageSize: 10,
        })
    });
}

interface Props {
    page: Page<CollectionEntry<"posts">>
    tag: string
}

const { page, tag } = Astro.props;
---

<Layout title="Tag List">
    <p class="flex flex-col text-center mb-6 border-b-2 pb-4">
        <span>Tag</span>
        <span class="font-bold text-2xl text-sky-300">{tag}</span>
    </p>

    <PostList posts={page.data} />

    <Paginator page={page} baseUrl={"/tags/" + slugger(tag)} />
</Layout>
