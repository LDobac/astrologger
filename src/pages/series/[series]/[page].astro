---
import { slug as slugger } from "github-slugger";
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import GetSeriesList from "@utils/GetSeriesList";
import PostList from "@components/PostList.astro";
import Paginator from "@components/Paginator.astro";
import type {Page} from "astro";
import { PAGE_SIZE } from "@utils/Constants";

// @ts-expect-error
export async function getStaticPaths ({ paginate }) {
    const seriesList = await GetSeriesList();
    const posts = await getCollection("posts");
    
    return seriesList.flatMap((series) => {
        const filteredPosts = posts.filter(post => post.data.series ? post.data.series === series : false);

        return paginate(filteredPosts, {
            params: { series: slugger(series) },
            props: { series },
            pageSize: PAGE_SIZE,
        });
    });
}

interface Props {
    page: Page<CollectionEntry<"posts">>
    series: string
}

const { page, series } = Astro.props;
const baseUrl = import.meta.env.SITE ?? Astro.url.origin;
---

<Layout
    title={"Series - " + series + " - " + page.currentPage.toString()}
    description="시리즈 목록 페이지입니다."
    url={baseUrl + Astro.url.pathname}
>
    <p class="flex flex-col text-center mb-6 border-b-2 pb-4">
        <span>Series</span>
        <span class="font-bold text-2xl text-sky-300">{series}</span>
    </p>

    <PostList posts={page.data} />

    <div class="mt-6">
        <Paginator page={page} baseUrl={"/series/" + slugger(series)} />
    </div>
</Layout>

