---
// icons from iconify/fluent
import SeriesLink from "@components/SeriesLink.astro";
import TagList from "@components/TagList.astro";
import {FormattedDate} from "@utils/FormattedDate";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { slug as slugger} from "github-slugger";
import "github-markdown-css/github-markdown-light.css";
import {GetPostsBySeries} from "@utils/GetPosts";

interface Props {
    post: CollectionEntry<"posts">
}

const { post } = Astro.props;

const { title, date, editDate, series, tags, og} = post.data;
const { Content } = await post.render();

let prevSeriesPost: (CollectionEntry<"posts"> | undefined) = undefined;
let nextSeriesPost: (CollectionEntry<"posts"> | undefined) = undefined;

if (series)
{
    const posts = await GetPostsBySeries(series, true);
    
    const postIdx = posts.findIndex((v) => v.data.title === title);
    
    const prevIdx = postIdx + 1;
    const nextIdx = postIdx - 1;
    
    if (nextIdx >= 0) nextSeriesPost = posts.at(nextIdx);
    if (prevIdx < posts.length) prevSeriesPost = posts.at(prevIdx);
}
---

<div class="">
    <header class="flex flex-col space-y-4 border-b-2 border-sky-300 pb-6">
        {og ? 
            <Image 
            class="w-full bg-black" 
            src={og.img} 
            alt={og.alt} />
            :
            <Image 
            class="w-full bg-black" 
            src={`/posts/${slugger(title)}.png`} 
            width={1200} height={630} 
            alt={"Thumbnail of " + title} />
        }
        
        <h1 class="leading-none">
            <span class="block text-2xl font-bold">{title}</span>
            {!!series &&
                <SeriesLink series={series} />
            }
        </h1>
        
        {!!tags &&
            <TagList tags={tags} />
        }
        
        <p>
            <span>작성일 : { FormattedDate(date) }</span>
            {!!editDate &&
                <span>&nbsp;/&nbsp;수정일 : { FormattedDate(editDate) }</span> 
            }
        </p>
    </header>
    
    <article class="mt-6 border-b-2 border-sky-300 pb-6">
        <div class="markdown-body">
            <Content />
        </div>
    </article>
    
    {(!!prevSeriesPost || !!nextSeriesPost) && series && 
        <p class="mt-6 font-bold">
            <SeriesLink series={series} />
            <span>&nbsp;시리즈의 다른 게시물 보기</span>
        </p>
        <div class="
        w-full flex flex-col space-y-4 mt-6 
        md:flex-row md:justify-between md:space-y-0
        "
        >
        {!!prevSeriesPost ?
            <a 
            class="
            bg-gradient-to-l from-sky-300 from-50% to-white to-50% hover:bg-right transition-all ease-out duration-500 delay-100 
            flex justify-between items-center 
            rounded-xl ring-1 ring-offset-2 border ring-sky-300 
            font-bold p-4
            md:w-1/2 md:mr-6
            lg:w-2/3 xl:w-1/3
            "
            style="background-size: 200%;"
            href={"/posts/" + slugger(prevSeriesPost.data.title)}
            >
            <span class="mr-10">
                <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28"><g transform="rotate(180 14 14)"><path fill="currentColor" d="M15.705 4.289a1 1 0 1 0-1.406 1.422L21.675 13H4a1 1 0 1 0 0 2h17.673l-7.374 7.286a1 1 0 0 0 1.406 1.423l8.927-8.821a1.25 1.25 0 0 0 0-1.778l-8.927-8.821Z"/></g></svg>
            </span>
            <span class="text-right truncate">{prevSeriesPost.data.title}</span>
        </a>
        :
        <div></div>
    }
    
    {!!nextSeriesPost &&
        <a 
        class="
        bg-gradient-to-l from-white from-50% to-sky-300 to-50% bg-right hover:bg-left transition-all ease-out delay-100 duration-500 
        flex justify-between items-center 
        rounded-xl ring-1 ring-offset-2 border ring-sky-300 
        font-bold p-4
        md:w-1/2 md:ml-6
        lg:w-2/3 xl:w-1/3
        "
        style="background-size: 200%;"
        href={"/posts/" + slugger(nextSeriesPost.data.title)}
        >
        <span class="text-left truncate">{nextSeriesPost.data.title}</span>
        <span class="text-right ml-10">
            <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28"><path fill="currentColor" d="M15.705 4.289a1 1 0 1 0-1.406 1.422L21.675 13H4a1 1 0 1 0 0 2h17.673l-7.374 7.286a1 1 0 0 0 1.406 1.423l8.927-8.821a1.25 1.25 0 0 0 0-1.778l-8.927-8.821Z"/></svg>
        </span>
    </a>
}  
</div>
}
</div>

<style is:global>

/* Markdown List Styles */
.markdown-body ul {
    list-style-type: disc;
}

.markdown-body ol ul,
.markdown-body ul ul {
    list-style-type: circle;
}

.markdown-body ol ol ul,
.markdown-body ol ul ul,
.markdown-body ul ol ul
.markdown-body ul ul ul {
    list-style-type: square;
}
.markdown-body ol {
    list-style-type: decimal;
}

.markdown-body ol ol,
.markdown-body ul ol {
    list-style-type: lower-roman;
}

.markdown-body ul ul ol,
.markdown-body ul ol ol,
.markdown-body ol ul ol,
.markdown-body ol ol ol {
    list-style-type: lower-alpha;
}

/* Rehype Pretty Code - Code Block */
pre {
    @apply !px-0 !rounded-lg;
}

code {
    @apply !text-sm md:!text-base !leading-normal md:!leading-normal;
}

pre > code {
    @apply grid;
}

.prose {
    @apply max-w-[55rem] sm:text-lg md:text-xl !leading-7 sm:!leading-9;
}

/* Rehype Pretty Code - Highlight/Line Numbers */
[data-line] {
    @apply px-6 border-l-4 border-l-transparent;
}

[data-highlighted-line] {
    /* background: rgba(200, 200, 255, 0.2); */
    @apply border-l-sky-300 bg-sky-300/20;
}

[data-highlighted-chars] {
    @apply bg-zinc-600/50 rounded ring-2;
    box-shadow: 0 0 0 4px rgb(82 82 91 / 0.5);

}

[data-chars-id] {
    @apply shadow-none p-1 border-b-2;
}

[data-chars-id] span {
    @apply !text-inherit;
}

[data-chars-id='v'] {
    @apply !text-pink-300 bg-rose-800/50 border-b-pink-600 font-bold;
    box-shadow: none;
}

[data-chars-id='s'] {
    @apply !text-yellow-300 bg-yellow-800/50 border-b-yellow-600 font-bold;
    box-shadow: none;
}

[data-chars-id='i'] {
    @apply   !text-purple-200 bg-purple-800/50 border-b-purple-600 font-bold;
    box-shadow: none;
}

code[data-line-numbers] {
    counter-reset: line;
}

code[data-line-numbers] > [data-line]::before {
    counter-increment: line;
    content: counter(line);
    
    @apply inline-block mr-4 w-4 text-right text-gray-500;
}

code[data-line-numbers-max-digits='2'] > [data-line]::before {
    @apply w-4;
}

code[data-line-numbers-max-digits='3'] > [data-line]::before {
    @apply w-8;
}

/* Rehype Pretty Code - Title/Caption */
[data-rehype-pretty-code-fragment] {
    position: relative;
}

[data-rehype-pretty-code-fragment] [data-rehype-pretty-code-title] {
    @apply inline rounded-t-lg px-4 py-3 text-sm leading-tight text-sky-300;
    background-color: #24292e;
    font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
}
</style>
